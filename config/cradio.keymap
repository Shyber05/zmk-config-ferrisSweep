/*
 * Copyright (c) 2020 The ZMK Contributors
 * goat
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    // flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        //zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        //mod kp when u hold, and to layer when you tap

        mtt: mod_tap_to {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_TO";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&to>;
        };

        //momentary layer on hold, and to layer on tap

        mlt: momentary_layer_tap_to {
            compatible = "zmk,behavior-hold-tap";
            label = "MOMENTARY_LAYER_TAP_TO";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&mo>, <&to>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_unlock {
            timeout-ms = <50>;
            key-positions = <11 12 13 16 17 18>;
            bindings = <&to 0>;
        };

        combo_lock {
            timeout-ms = <50>;
            key-positions = <2 10>;
            layers = <2>;
            bindings = <&to 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_default {
            bindings = <
&kp Q  &kp W  &kp E  &kp R      &kp T        &kp Y      &kp U     &kp I                &kp O            &kp P
&kp A  &kp S  &kp D  &kp F      &kp G        &kp H      &kp J     &kp K                &kp L            &kp BACKSPACE
&kp Z  &kp X  &kp C  &kp V      &kp B        &kp N      &kp M     &mt RIGHT_ALT COMMA  &mt LGUI PERIOD  &kp ENTER
                     &kp LCTRL  &kp LSHFT    &kp SPACE  &mlt 2 1
            >;
        };

        Symbol {
            bindings = <
&kp GRAVE         &trans             &kp SEMI   &kp SINGLE_QUOTE  &kp BACKSLASH     &kp N7     &kp N8    &kp N9  &kp N0     &trans
&kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp COMMA  &kp PERIOD        &kp SLASH         &kp N4     &kp N5    &kp N6  &kp EQUAL  &kp BACKSPACE
&kp LCTRL         &trans             &none      &kp LEFT_GUI      &kp TAB           &kp N1     &kp N2    &kp N3  &kp MINUS  &kp ENTER
                                                &mlt 0 0          &kp LEFT_SHIFT    &kp SPACE  &mlt 2 2
            >;
        };

        Nav {
            bindings = <
&trans     &mkp LCLK       &kp UP_ARROW    &mkp RCLK     &trans            &kp PRINTSCREEN   &kp PAGE_DOWN     &mmv MOVE_UP    &trans             &trans
&trans     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT     &none             &none             &mmv MOVE_DOWN    &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &kp BACKSPACE
&kp LCTRL  &kp LEFT_ALT    &trans          &kp LEFT_GUI  &kp TAB           &msc SCROLL_LEFT  &msc SCROLL_DOWN  &msc SCROLL_UP  &msc SCROLL_RIGHT  &kp ENTER
                                           &mlt 0 0      &kp LEFT_SHIFT    &kp SPACE         &mlt 3 3
            >;
        };

        Settings {
            bindings = <
&bt BT_CLR  &kp DELETE  &sys_reset        &kp INS       &kp C_VOL_UP    &kp PRINTSCREEN   &kp F1    &kp F2   &kp F3   &kp F4
&kp ESC     &kp LALT    &kp LEFT_CONTROL  &kp ENTER     &kp C_VOL_DN    &kp K_CALCULATOR  &kp F5    &kp F6   &kp F7   &kp F8
&bt BT_PRV  &bt BT_NXT  &none             &none         &none           &kp CAPS          &kp F9    &kp F10  &kp F11  &kp F12
                                          &mtt LCTRL 0  &kp LSHFT       &kp SPACE         &mlt 1 2
            >;
        };
    };
};
